# File managed by Ansible
{%- macro print(host,command,description,index,dictionary) %}

define service {
	host_name               {{ host }}
	use                     generic-service
	notification_interval   0
	service_description     {{ description }} {{ index }}
{%  if dictionary.normal_check_interval is defined %}
        normal_check_interval   {{ dictionary.normal_check_interval }}
{%  endif %}
	check_command           {{ command }}
}
{%  endmacro %}

{%- macro build_define(host,check) %}
{%  if nagios_checks[check].type is defined %}
{%     if nagios_checks[check].type == 'command' %}
{%        set command = check %}
{%        set description = nagios_checks[check].description %}
{{        print(host,command,description,'',{}) }}
{%     endif %}
{%  elif check|search('nrpe_') %}
{%     set description = nagios_checks[check].description %}
{%     for dict in hostvars[host][check] %}
{%        set command = 'check_nrpe_1arg!' ~ nrpe_prefix|default('') ~ check ~ loop.index0 ~ ' ' ~ dict.nrpe_opts|default('') %}
{{        print(host,command|trim(),description,loop.index0,dict) }}
{%        endfor %}
{%  endif %}
{%  endmacro %}
{################################################################################}
{# for group in nagios.services.group                                           #}
{#    for service in group.services                                             #}
{#        for host in group                                                     #}
{#            if host is enabled                                                #}
{#               ( -> hostvars[host]['nagios_enable'] == True )                 #}
{#               ( -> host not in nagios.hostgroups['group'].exclude )          #}
{#               ( -> host not in nagios.services.hostgroups['group'].exclude ) #}
{################################################################################}

{%  if nagios.services.hostgroups is defined %}
{%     for hostgroup,services in nagios.services.hostgroups.items() %}
{%        for service,items in services.items() %}
{%           for host in groups[hostgroup] %}
{%              if hostvars[host]['nagios_enable']|default(True) == True
                   and not ( nagios.hostgroups[hostgroup].exclude is defined
                             and host in nagios.hostgroups[hostgroup].exclude )
                   and not ( nagios.services.hostgroups[hostgroup][service].exclude is defined
                             and host in nagios.services.hostgroups[hostgroup][service].exclude ) %}
                   {{- build_define(host,service) -}}
{%              endif %}
{%           endfor %}
{%        endfor %}
{%     endfor %}
{%  endif %}

{#######################################################################}
{# for host in nagios.services.hosts                                   #}
{#    for service in hosts.services                                    #}
{#        for host in group                                            #}
{#            if host is enabled                                       #}
{#               ( -> hostvars[host]['nagios_enable'] == True )        #}
{#               ( -> nagios.hosts['host'].enabled == True )           #}
{#######################################################################}
{%  if nagios.services.hosts is defined %}
{%     for host,services in nagios.services.hosts.items() %}
{%        if hostvars[host]['nagios_enable']|default(True) == True
             and not ( nagios.hosts[host] is defined and
                       nagios.hosts[host].enable|default(True) == False ) %}
{%           for service,items in services.items() %}
                {{- build_define(host,service) -}}
{%           endfor %}
{%         endif %}
{%     endfor %}
{%  endif %}
